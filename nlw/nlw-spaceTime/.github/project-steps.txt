BACKEND -------------------------------------------------------------------------------------
Criar um diretório para armazenar o Projeto Backend e acessar o diretório criado;

npm init -y = inicia o projeto javascript

npm i typescript -D = typescript como dependencia de desenvolvimento
npm i @types/node -D = tipagens como dependencia de desenvolvimento

npx executa binarios que são instalados pelas bibliotecas

npx tsc --init = inicializa o arquivo de configuração do typescript (Alterar o target para es2020)

-------

criar o diretório src e o arquivo server.ts

------

npm i tsx -D = automatiza o processo de converter o código e executa o projeto


adicionar os scripts: 

    "dev": "tsx watch src/server.ts",
    "build": "tsup ./src",
    "start": "node dist/server.js"

npm i fastify = framework


npm i eslint -D = Padronização de codigo como dependencia de desenvolvimento

instalação do Prisma e configuração para uso do SQLite

npm i prisma -D

npx prisma init --datasource-provider SQLite

inicializar/atualizar as tabelas do banco

npx prisma migrate dev
ou
npx prisma db push (no caso do mongodb)
------------------------------------
visualizar o banco de dados

npx prisma studio

instalar a dependencia de acesso ao banco

npm i @prisma/client

para adicionar colunas não opcionais e não houver dados sensiveis no banco, 
utilizar o comando npx prisma migrate reset

utilização da biblioteca ZOD, para validação do tipo de variável

npm i zod

adicionar o plugin de configurações
npm i @fastify/cors

cors é uma técnica de segurança do backend que limita quais endereços poderão acessar o backend

para a leitura das variaveis de ambiente, instalar a dependencia de desenvolvimento 

npm i dotenv -D

instalar a biblioteca do axios para requisições

npm i axios

adicionar o pacote jwt

npm i @fastify/jwt

adicionar o host '0.0.0.0' para a autenticação do mobile

Aula 04

Plugin para upload multipart

npm i @fastify/multipart

importar o modulo interno randonUUID

import { randomUUID } from 'node:crypto'

Armazenamentos: Amazon S3 Google Cloud Storage, Cloudflare R2

modulo de teste para disponibilizar arquivos do backend

npm i @fastify/static
----------------------------WEB--------------------------------------------------
Criando o projeto react com framework next
npx create-next-app@latest

conceitos do React:

Componentes -> uma forma de separar a tela em vários pedaços chamados componentes que são uma função que retorna um código html.

Typescript + JSX = TSX
JSX = Javascript + XML

TailwindCss = Utility classes

Aula 02

o Next possui uma opção de importação de fontes do google 'next/font/google'

adicionar as importações das fontes com o subset, peso e variavel;

alterar o arquivo tailwind.config.json

instalar o pacote de icones lucide-react

npm i lucide-react

AULA 03

Instalar o axios no front-endereços

npm i axios

Instalar o decodificador de JWT

npm i jwt-decode

Aula 04----------
Instalar o plugin de formularios do tailwindcss

npm install -D @tailwindcss/forms

e adicionar o plugin no arquivo de configuração do tailwind

require('@tailwindcss/forms')

middleware de autenticação:
limitar acesso a rotas e ender

biblioteca para extrair o token do document.cookie

npm i js-cookie

adicionar as tipagens desta biblioteca

npm i --save-dev @types/js-cookie
-----------------------------------------------------MOBILE----------------------

Configuração do projeto Mobile

npx create-expo-app mobile

adicionar o native-wind

npm i nativewind

e adicionar a dependencia de desenvolvimento

npm i tailwindcss -D

inicializar a configuração do tailwind

npx tailwindcss init

substituir a linha content do arquivo tailwindcss.config.js
incluir a linha de configuração do babel.config

instalar o eslint e a configuração da rocketseat como dependencia de desenvolvimento

npm i eslint @rocketseat/eslint-config -D

adicionar o arquivo de configuração .eslintrc.json
com 
{
    "extends": [
        "@rocketseat/eslint-config/react"
    ]
}

instalar o plugin do prettier como dependencia de desenvolvimento

npm i prettier-plugin-tailwindcss -D

adicionar o arquivo de configuração prettier.config.js
com o conteudo:
module.exports = {
plugins: [require('prettier-plugin-tailwindcss')]
}

Aula 02 

Importar as configurações de cor do tailwind do projeto WEB;

instalar o pacote expo-google-fonts e as fontes necessarias

npx expo install @expo-google-fonts/roboto @expo-google-fonts/bai-jamjuree expo-font

adicionar a regra no eslint para não criticar o camelcase

"rules": {
        "camelcase": "off"
    }
    
Adicionar a extensão de fontes no arquivo de configuração do tailwind

fontFamily: {
        title: 'Roboto_700Bold',
        body: 'Roboto_400Regular',
        alt: 'BaiJamjuree_700Bold',
      },
      
Adicionar a declaração dos arquivos de assets no arquivo assets.d.ts

adicionar a biblioteca de importação de SVG

adicionar a biblioteca SVG

expo install react-native-svg

adicionar a biblioteca svg transformer como dependencia de desenvolvimento

npm i -D react-native-svg-transformer

criar um arquivo de confguração na raiz do projeto 

metro.config.js

O tailwind/nativewind só estiliza componentes existentes no react native
para estilizar componentes criados a partir de svg por exemplo, é necessário 
criar uma const utilizando a função styled do nativewind que recebe o componente e cria um novo que pode receber estilizações


AULA 03 ----------------------------------------------------

Instalar as bibliotecas de autenticação do expo

npx expo install expo-auth-session expo-crypto

adicionar a configuração de scheme no app.json

adicionar o axios

npm i axios

instalar o secure store do expo

npx expo install expo-secure-store

instalar a biblioteca de rotas do expo

npx expo install expo-router react-native-safe-area-context react-native-screens expo-linking expo-constants expo-status-bar

aula 05------------------

instalar a biblioteca expo image picker

npx expo install expo-image-picker

biblioteca de manipulação de data 

npm i dayjs
